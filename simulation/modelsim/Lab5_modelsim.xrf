vendor_name = ModelSim
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/HexDriver.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/mux2to1.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/adder_4_select.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/full_adder.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/carry_select_adder_9.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/control.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/computation_module.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/processer.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/shift_reg_8.sv
source_file = 1, C:/Users/Sunny/Documents/GitHub/ECE385_Lab5/db/Lab5.cbx.xml
design_name = processer
instance = comp, \AhexU[0]~output , AhexU[0]~output, processer, 1
instance = comp, \AhexU[1]~output , AhexU[1]~output, processer, 1
instance = comp, \AhexU[2]~output , AhexU[2]~output, processer, 1
instance = comp, \AhexU[3]~output , AhexU[3]~output, processer, 1
instance = comp, \AhexU[4]~output , AhexU[4]~output, processer, 1
instance = comp, \AhexU[5]~output , AhexU[5]~output, processer, 1
instance = comp, \AhexU[6]~output , AhexU[6]~output, processer, 1
instance = comp, \AhexL[0]~output , AhexL[0]~output, processer, 1
instance = comp, \AhexL[1]~output , AhexL[1]~output, processer, 1
instance = comp, \AhexL[2]~output , AhexL[2]~output, processer, 1
instance = comp, \AhexL[3]~output , AhexL[3]~output, processer, 1
instance = comp, \AhexL[4]~output , AhexL[4]~output, processer, 1
instance = comp, \AhexL[5]~output , AhexL[5]~output, processer, 1
instance = comp, \AhexL[6]~output , AhexL[6]~output, processer, 1
instance = comp, \BhexU[0]~output , BhexU[0]~output, processer, 1
instance = comp, \BhexU[1]~output , BhexU[1]~output, processer, 1
instance = comp, \BhexU[2]~output , BhexU[2]~output, processer, 1
instance = comp, \BhexU[3]~output , BhexU[3]~output, processer, 1
instance = comp, \BhexU[4]~output , BhexU[4]~output, processer, 1
instance = comp, \BhexU[5]~output , BhexU[5]~output, processer, 1
instance = comp, \BhexU[6]~output , BhexU[6]~output, processer, 1
instance = comp, \BhexL[0]~output , BhexL[0]~output, processer, 1
instance = comp, \BhexL[1]~output , BhexL[1]~output, processer, 1
instance = comp, \BhexL[2]~output , BhexL[2]~output, processer, 1
instance = comp, \BhexL[3]~output , BhexL[3]~output, processer, 1
instance = comp, \BhexL[4]~output , BhexL[4]~output, processer, 1
instance = comp, \BhexL[5]~output , BhexL[5]~output, processer, 1
instance = comp, \BhexL[6]~output , BhexL[6]~output, processer, 1
instance = comp, \X_val~output , X_val~output, processer, 1
instance = comp, \Clk~input , Clk~input, processer, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, processer, 1
instance = comp, \control_module|counter_cur.E0~feeder , control_module|counter_cur.E0~feeder, processer, 1
instance = comp, \Reset~input , Reset~input, processer, 1
instance = comp, \control_module|counter_cur.E0 , control_module|counter_cur.E0, processer, 1
instance = comp, \control_module|counter_cur.E1 , control_module|counter_cur.E1, processer, 1
instance = comp, \control_module|counter_cur.F0 , control_module|counter_cur.F0, processer, 1
instance = comp, \control_module|counter_cur.F1 , control_module|counter_cur.F1, processer, 1
instance = comp, \control_module|counter_cur.G0 , control_module|counter_cur.G0, processer, 1
instance = comp, \control_module|counter_cur.G1 , control_module|counter_cur.G1, processer, 1
instance = comp, \control_module|counter_cur.H0 , control_module|counter_cur.H0, processer, 1
instance = comp, \control_module|counter_cur.H1 , control_module|counter_cur.H1, processer, 1
instance = comp, \Run~input , Run~input, processer, 1
instance = comp, \control_module|Selector1~0 , control_module|Selector1~0, processer, 1
instance = comp, \control_module|counter_cur.I , control_module|counter_cur.I, processer, 1
instance = comp, \control_module|Selector0~0 , control_module|Selector0~0, processer, 1
instance = comp, \control_module|counter_cur.Wait , control_module|counter_cur.Wait, processer, 1
instance = comp, \control_module|counter_next.A0~0 , control_module|counter_next.A0~0, processer, 1
instance = comp, \control_module|counter_cur.A0 , control_module|counter_cur.A0, processer, 1
instance = comp, \control_module|counter_cur.A1 , control_module|counter_cur.A1, processer, 1
instance = comp, \control_module|counter_cur.B0 , control_module|counter_cur.B0, processer, 1
instance = comp, \control_module|counter_cur.B1 , control_module|counter_cur.B1, processer, 1
instance = comp, \control_module|counter_cur.C0~feeder , control_module|counter_cur.C0~feeder, processer, 1
instance = comp, \control_module|counter_cur.C0 , control_module|counter_cur.C0, processer, 1
instance = comp, \control_module|counter_cur.C1 , control_module|counter_cur.C1, processer, 1
instance = comp, \control_module|counter_cur.D0~feeder , control_module|counter_cur.D0~feeder, processer, 1
instance = comp, \control_module|counter_cur.D0 , control_module|counter_cur.D0, processer, 1
instance = comp, \control_module|counter_cur.D1 , control_module|counter_cur.D1, processer, 1
instance = comp, \control_module|WideOr0~0 , control_module|WideOr0~0, processer, 1
instance = comp, \control_module|WideOr0~1 , control_module|WideOr0~1, processer, 1
instance = comp, \ClearA_LoadB~input , ClearA_LoadB~input, processer, 1
instance = comp, \SW[0]~input , SW[0]~input, processer, 1
instance = comp, \SW[1]~input , SW[1]~input, processer, 1
instance = comp, \SW[2]~input , SW[2]~input, processer, 1
instance = comp, \SW[4]~input , SW[4]~input, processer, 1
instance = comp, \A_reg|R~8 , A_reg|R~8, processer, 1
instance = comp, \A_reg|R~1 , A_reg|R~1, processer, 1
instance = comp, \A_reg|R[3] , A_reg|R[3], processer, 1
instance = comp, \A_reg|R~7 , A_reg|R~7, processer, 1
instance = comp, \A_reg|R[2] , A_reg|R[2], processer, 1
instance = comp, \A_reg|R~6 , A_reg|R~6, processer, 1
instance = comp, \A_reg|R[1] , A_reg|R[1], processer, 1
instance = comp, \A_reg|R~5 , A_reg|R~5, processer, 1
instance = comp, \A_reg|R[0] , A_reg|R[0], processer, 1
instance = comp, \SW[7]~input , SW[7]~input, processer, 1
instance = comp, \mode[0]~0 , mode[0]~0, processer, 1
instance = comp, \B_reg|R~3 , B_reg|R~3, processer, 1
instance = comp, \B_reg|R[7] , B_reg|R[7], processer, 1
instance = comp, \SW[6]~input , SW[6]~input, processer, 1
instance = comp, \B_reg|R~2 , B_reg|R~2, processer, 1
instance = comp, \B_reg|R[6] , B_reg|R[6], processer, 1
instance = comp, \SW[5]~input , SW[5]~input, processer, 1
instance = comp, \B_reg|R~1 , B_reg|R~1, processer, 1
instance = comp, \B_reg|R[5] , B_reg|R[5], processer, 1
instance = comp, \B_reg|R~0 , B_reg|R~0, processer, 1
instance = comp, \B_reg|R[4] , B_reg|R[4], processer, 1
instance = comp, \SW[3]~input , SW[3]~input, processer, 1
instance = comp, \B_reg|R~7 , B_reg|R~7, processer, 1
instance = comp, \B_reg|R[3] , B_reg|R[3], processer, 1
instance = comp, \B_reg|R~6 , B_reg|R~6, processer, 1
instance = comp, \B_reg|R[2] , B_reg|R[2], processer, 1
instance = comp, \B_reg|R~5 , B_reg|R~5, processer, 1
instance = comp, \B_reg|R[1] , B_reg|R[1], processer, 1
instance = comp, \B_reg|R~4 , B_reg|R~4, processer, 1
instance = comp, \B_reg|R[0] , B_reg|R[0], processer, 1
instance = comp, \control_module|Add~0 , control_module|Add~0, processer, 1
instance = comp, \adder|operand[7]~0 , adder|operand[7]~0, processer, 1
instance = comp, \adder|operand[7]~1 , adder|operand[7]~1, processer, 1
instance = comp, \control_module|Add~1 , control_module|Add~1, processer, 1
instance = comp, \adder|S[8]~2 , adder|S[8]~2, processer, 1
instance = comp, \adder|adder|B2~6 , adder|adder|B2~6, processer, 1
instance = comp, \adder|adder|B2~7 , adder|adder|B2~7, processer, 1
instance = comp, \adder|adder|B2~8 , adder|adder|B2~8, processer, 1
instance = comp, \adder|adder|B2~9 , adder|adder|B2~9, processer, 1
instance = comp, \adder|operand[5]~2 , adder|operand[5]~2, processer, 1
instance = comp, \adder|operand[5]~3 , adder|operand[5]~3, processer, 1
instance = comp, \adder|operand[2]~4 , adder|operand[2]~4, processer, 1
instance = comp, \adder|operand[2]~5 , adder|operand[2]~5, processer, 1
instance = comp, \adder|adder|B2~10 , adder|adder|B2~10, processer, 1
instance = comp, \adder|adder|bit0|c~0 , adder|adder|bit0|c~0, processer, 1
instance = comp, \adder|adder|bit0|c~1 , adder|adder|bit0|c~1, processer, 1
instance = comp, \adder|adder|B2~11 , adder|adder|B2~11, processer, 1
instance = comp, \adder|adder|B2~3 , adder|adder|B2~3, processer, 1
instance = comp, \adder|adder|B2~2 , adder|adder|B2~2, processer, 1
instance = comp, \adder|adder|B2~0 , adder|adder|B2~0, processer, 1
instance = comp, \adder|adder|B2~1 , adder|adder|B2~1, processer, 1
instance = comp, \adder|adder|B2~4 , adder|adder|B2~4, processer, 1
instance = comp, \adder|adder|B2~5 , adder|adder|B2~5, processer, 1
instance = comp, \adder|S[8]~0 , adder|S[8]~0, processer, 1
instance = comp, \adder|S[8]~3 , adder|S[8]~3, processer, 1
instance = comp, \adder|S[8]~1 , adder|S[8]~1, processer, 1
instance = comp, \A_reg|R~4 , A_reg|R~4, processer, 1
instance = comp, \A_reg|R[7] , A_reg|R[7], processer, 1
instance = comp, \A_reg|R~3 , A_reg|R~3, processer, 1
instance = comp, \A_reg|R[6] , A_reg|R[6], processer, 1
instance = comp, \A_reg|R~2 , A_reg|R~2, processer, 1
instance = comp, \A_reg|R[5] , A_reg|R[5], processer, 1
instance = comp, \A_reg|R~0 , A_reg|R~0, processer, 1
instance = comp, \A_reg|R[4] , A_reg|R[4], processer, 1
instance = comp, \A_HexUp|WideOr6~0 , A_HexUp|WideOr6~0, processer, 1
instance = comp, \A_HexUp|WideOr5~0 , A_HexUp|WideOr5~0, processer, 1
instance = comp, \A_HexUp|WideOr4~0 , A_HexUp|WideOr4~0, processer, 1
instance = comp, \A_HexUp|WideOr3~0 , A_HexUp|WideOr3~0, processer, 1
instance = comp, \A_HexUp|WideOr2~0 , A_HexUp|WideOr2~0, processer, 1
instance = comp, \A_HexUp|WideOr1~0 , A_HexUp|WideOr1~0, processer, 1
instance = comp, \A_HexUp|WideOr0~0 , A_HexUp|WideOr0~0, processer, 1
instance = comp, \A_HexDn|WideOr6~0 , A_HexDn|WideOr6~0, processer, 1
instance = comp, \A_HexDn|WideOr5~0 , A_HexDn|WideOr5~0, processer, 1
instance = comp, \A_HexDn|WideOr4~0 , A_HexDn|WideOr4~0, processer, 1
instance = comp, \A_HexDn|WideOr3~0 , A_HexDn|WideOr3~0, processer, 1
instance = comp, \A_HexDn|WideOr2~0 , A_HexDn|WideOr2~0, processer, 1
instance = comp, \A_HexDn|WideOr1~0 , A_HexDn|WideOr1~0, processer, 1
instance = comp, \A_HexDn|WideOr0~0 , A_HexDn|WideOr0~0, processer, 1
instance = comp, \B_HexUp|WideOr6~0 , B_HexUp|WideOr6~0, processer, 1
instance = comp, \B_HexUp|WideOr5~0 , B_HexUp|WideOr5~0, processer, 1
instance = comp, \B_HexUp|WideOr4~0 , B_HexUp|WideOr4~0, processer, 1
instance = comp, \B_HexUp|WideOr3~0 , B_HexUp|WideOr3~0, processer, 1
instance = comp, \B_HexUp|WideOr2~0 , B_HexUp|WideOr2~0, processer, 1
instance = comp, \B_HexUp|WideOr1~0 , B_HexUp|WideOr1~0, processer, 1
instance = comp, \B_HexUp|WideOr0~0 , B_HexUp|WideOr0~0, processer, 1
instance = comp, \B_HexDn|WideOr6~0 , B_HexDn|WideOr6~0, processer, 1
instance = comp, \B_HexDn|WideOr5~0 , B_HexDn|WideOr5~0, processer, 1
instance = comp, \B_HexDn|WideOr4~0 , B_HexDn|WideOr4~0, processer, 1
instance = comp, \B_HexDn|WideOr3~0 , B_HexDn|WideOr3~0, processer, 1
instance = comp, \B_HexDn|WideOr2~0 , B_HexDn|WideOr2~0, processer, 1
instance = comp, \B_HexDn|WideOr1~0 , B_HexDn|WideOr1~0, processer, 1
instance = comp, \B_HexDn|WideOr0~0 , B_HexDn|WideOr0~0, processer, 1
